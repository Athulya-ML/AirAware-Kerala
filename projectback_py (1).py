# -*- coding: utf-8 -*-
"""ProjectBack.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1thW1CyqSFw6-dU2w0nPbOh9muGTOV4Qy
"""

import pandas as pd
data=pd.read_excel(r"/content/CAAQMS_2023_2024_Merged.xlsx")
data

data.isnull().sum()

data.duplicated().sum()

x = data[['CO','Ozone','NO','NO2','NOX','NH3','SO2','PM2.5','PM10']]
y = data['AQI']
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)
x_train
y

from sklearn.linear_model import LinearRegression
li = LinearRegression()
li.fit(x_train,y_train)

pre=li.predict(x_test)
pre

import pickle
f=open('li.pkl', 'wb')
pickle.dump(li, f)
f.close()

f=open('li.pkl','rb')
li=pickle.load(f)
f.close()

from sklearn.tree import DecisionTreeRegressor
dt_regressor = DecisionTreeRegressor()
dt_regressor.fit(x_train, y_train)

data=dt_regressor.predict(x_test)
data

from sklearn.metrics import r2_score
y_pred = li.predict(x_test)
r2_score(y_test, y_pred)

from sklearn.metrics import mean_squared_error
print("MSE", mean_squared_error(y_test, y_pred))

import numpy as np
print("RME",np.sqrt(mean_squared_error(y_test, y_pred)))

from sklearn.ensemble import RandomForestRegressor
rf_regressor = RandomForestRegressor(n_estimators=100, random_state=42)
rf_regressor.fit(x_train, y_train)

pre=rf_regressor.predict(x_test)
pre

from sklearn.metrics import r2_score
y_pred = li.predict(x_test)
r2_score(y_test, y_pred)

from sklearn.metrics import mean_squared_error
print("MSE", mean_squared_error(y_test, y_pred))

import numpy as np
print("RME",np.sqrt(mean_squared_error(y_test, y_pred)))

from sklearn.neighbors import KNeighborsRegressor
knn_regressor = KNeighborsRegressor(n_neighbors=5)
knn_regressor.fit(x_train, y_train)

pre=knn_regressor.predict(x_test)
pre

from sklearn.metrics import r2_score
y_pred = li.predict(x_test)
r2_score(y_test, y_pred)

from sklearn.metrics import mean_squared_error
print("MSE", mean_squared_error(y_test, y_pred))

import numpy as np
print("RME",np.sqrt(mean_squared_error(y_test, y_pred)))

import matplotlib.pyplot as plt

categories=['Good','Unhealthy','Very Unhealthy','Hazardous']
values= [50,150,200,500]
plt.bar(categories,values)
plt.show()